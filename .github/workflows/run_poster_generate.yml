name: Run Poster Generate

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  # please change to your own config.
  # this actions generate only this year
  # If you fork this please change the type to yours below
  TYPE: "issue, kindle" # support strava/gpx/ns/cichang/shanbay/duolingo/issue/leetcode/twitter/github/gitlab/kindle/bilibili/wakatime/dota2/forest, Please change the 'pass' it to your own separated by commas
  ME: Goldenages1989
  GITHUB_NAME: goldenages1989
  GITHUB_EMAIL: xiaogang19891001@gmail.com

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      # from pdm
      - name: Set Variables
        id: set_variables
        run: |
          echo "::set-output name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
          echo "::set-output name=PIP_CACHE::$(pip cache dir)"
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: Ubuntu-pip-${{ steps.set_variables.outputs.PY }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.pip-cache.outputs.cache-hit != 'true'

      - name: Run sync issue script
        if: contains(env.TYPE, 'issue')
        run: |
          python -m github_poster issue --issue_number ${{ secrets.ISSUE_NUMBER }} --repo_name ${{ secrets.REPO_NAME }} --github_token ${{ secrets.G_T }} --me ${{ env.ME }}

          #- name: Run sync issue_diet script
          #if: contains(env.TYPE, 'issue')
          #run: |
          #python -m github_poster issue --issue_number ${{ secrets.ISSUE_NUMBER_DIET }} --repo_name ${{ secrets.REPO_NAME }} --github_token ${{ secrets.G_T }} --me ${{ env.ME }}

          #- name: Run sync issue_stretch script
          #if: contains(env.TYPE, 'issue')
          #run: |
          #python -m github_poster issue --issue_number ${{ secrets.ISSUE_NUMBER_STRETCH }} --repo_name ${{ secrets.REPO_NAME }} --github_token ${{ secrets.G_T }} --me ${{ env.ME }}

      - name: Run sync issue_pomodoro script
        if: contains(env.TYPE, 'issue')
        run: |
          python -m github_poster issue --issue_number ${{ secrets.ISSUE_NUMBER_POMODORO }} --repo_name ${{ secrets.REPO_NAME }} --github_token ${{ secrets.G_T }} --me ${{ env.ME }} --special-number1 5 --special-number2 8 --special-color1 '#9999ff' --special-color2 '#ff3800' --track-color '#f4cccc'
        
      - name: Run sync forest script
        if: contains(env.TYPE, 'forest')
        run: |
          python -m github_poster forest --forest_email ${{ secrets.FOREST_EMAIL }} --forest_password ${{ secrets.FOREST_PASSWORD }} --year 2022 --me ${{ env.ME }}

      - name: Run sync kindle script
        if: contains(env.TYPE, 'kindle')
        run: |
          python -m github_poster kindle --kindle_cookie  "${{ secrets.KINDLE_COOKIE }}" --year=2021-2022 --me ${{ env.ME }}

      - name: Mv svg files to examples
        # only for me to show
        if: github.repository_owner == 'goldenages1989'
        run: mv OUT_FOLDER/*.svg examples/

      - name: Push new svg posters
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.G_T }}
          commit-message: "Make new poster"
          files: examples OUT_FOLDER
          rebase: "true"
          name: ${{ env.GITHUB_NAME }}
          email: ${{ env.GITHUB_EMAIL }}
